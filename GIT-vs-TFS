GIT vs TFS
GIT был задуман, как децентрализированная система контроля версий, в то время как TFS – централизированная система контроля версий.  TFS имеет некоторые из преимуществ децентрализированных систем, которые будут раскрыты ниже в кратком сравнии GIT и TFS.
Основное отличие между TFS и GIT заключается в том, что в GIT происходит т.н. “автоматическое резервное копирование” всего репозитория каждый раз, как кто-то выполняет “pull”  центрального репозитория. Включая все историю изменений файлов. Преимущество состоит в самой резервной копии в случае утери данных на самом сервере, также возможности работы без подключения к центральному серверу, возможности выполнения операций “check-in”, “merge” без подключения к серверу просто среди участников проекта, а также можно самому стать сервером.
В случае с TFS, новый участник проекта выполняет типичную операцию “Get Latest”, в результате которой последние версии файлов проекта копируются локально.  Эта локальная копия также обеспечивает автономную работу без подключения к центральному серверу,  но изменять файлы можно будет только те, с которыми была выполнена предварительная операция “check-out”. Также остальные команды TFS требуют связи с центральным сервером.
 
GIT также может использоваться с Microsoft Visual Studio, в результате интеграции будут доступны GIT команды и будет использована GIT терминология (в TFS она незначительно отличается для типовых операций)
 
Также, следует сказать,  что в случае с GIT, для измененных файлов вначале выполняется “commit” в локальный репозиторий, без участия в этом сервера, что позволяет избежать нарушения работы остальной команды и продукта, если изменения содержали ошибки в коде.  У TFS есть аналог этой операции который называется “shelving”, в противном случае операция “check-in” выполняется прямо на сервер.
Одно из отличий между GIT и TFS также то, что TFS требует аттрибута Read-Only=True на файлах, с которыми пользователь не работает в данное время. Операция “check-out” снимает аттрибут “Read-Only” на файле, также помечает на сервере имя пользователя, который выполнил “check-out” и далее файл может быть изменен. Именно изменения TFS’ом аттрибута определяет то, какие файлы будут кандидатами на “check-in” в Source Control. Разумеется, аттрибут Read-Only можно изменять в ручную, но в таком случае возникнут неудобства в синхронизации файлами с сервером. 
В случае с GIT, все файлы проекта доступны для записи, и то, какие файлы были изменены, проверяется автоматически.
